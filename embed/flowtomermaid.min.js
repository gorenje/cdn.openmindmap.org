window.FlowToMermaid={constructMermaid:function(e,r="TB",l=void 0){for(var i={payload:e},a={},e=i.payload.filter(e=>("group"==e.type&&(a[e.id]={nodesids:[...e.nodes||[]],name:e.name||`**missing name ${e.id}**`}),"tab"!=e.type&&"group"!=e.type)),n={},t=0;t<e.length;t++){var s=e[t];n[s.id]=s}var o=l,d=(l||(o={nodes:{node:e=>n[e],subflow:e=>n[e]}}),e=>e&&{nnull:"not null",eq:"==",neq:"!=",lt:"<",lte:"<=",gt:">",gte:">=",hask:"has key",cont:"contains"}[e]||e),c=e=>e.replaceAll("&","&amp;").replaceAll("#","#35;").replaceAll("[","#91;").replaceAll("]","#93;").replaceAll("(","#40;").replaceAll(")","#41;").replaceAll("|","#124;").replaceAll(">","&gt;").replaceAll("<","&lt;").replaceAll("{","#123;").replaceAll("}","#125;").replaceAll("/","#47;").replaceAll('"',"#34;"),p=(e,r=void 0)=>{if(!e)return"";var l=e.name||e.type;switch(r=r?'|"'+c(r)+'"| ':"",l=c(l),e.type){case"switch":case"join":case"split":return r+e.id+'{"'+l+'"}';case"link call":case"link out":if(e.mode&&"return"==e.mode)return r+e.id+"[\\Link Return/]";if(!e.name||e.name.match(/^link out/)){if("dynamic"==e.linkType)return r+e.id+'{{"'+(l="\\Dynamic Target/")+'"}}';var i=e.links&&0<e.links.length&&(n[e.links[0]]||o.nodes.node(e.links[0])),l=c(i&&i.name||e.type)}return r+e.id+'{{"'+l+'"}}';case"link in":return l=c(e.name||e.links&&0<e.links.length&&n[e.links[0]]&&n[e.links[0]].name||e.type),r+e.id+'{{"'+l+'"}}';case"junction":return r+e.id+'(("conn"))';case"inject":case"debug":return r+e.id+'(["'+l+'"])';case"http in":return r+e.id+'["'+c("["+e.method+"] "+e.url)+'"]';case"mermaid-flowchart":return e.id+`@{ shape: "${e.shape}", label: "${l}" }`;default:return e.type.startsWith("subflow:")?(i=o.nodes.subflow(e.type.replace(/subflow:/,"")),l=c(i&&i.name||e.type),r+e.id+'[/"'+l+'"/]'):r+e.id+'["'+l+'"]'}};i.mermaid=["%% change this to LR Node-RED like UML","graph "+r];for(var h,t=0;t<e.length;t++){var u=e[t];if(u.links&&0<u.links.length&&"link out"==u.type)for(var m=0;m<u.links.length;m++)n[u.links[m]]&&i.mermaid.push(p(u)+" -.-> "+u.links[m]);if(u.wires&&0<u.wires.length)if("mermaid-flowchart"==u.type)for(var f=0;f<u.wires.length;f++)for(var w=0;w<u.wires[f].length;w++){var g=u.wires[f][w],k=(u.wirecfgs||[]).filter(e=>e.id==g)[0]||{};if(n[g]){let e=" --\x3e ";var y=c(k.name||"");switch(k.arrow||"arrow"){case"line":e=""!==y?` -- ${y} --- `:" --- ";break;case"arrow":e=""!==y?` -- ${y} --> `:" --\x3e ";break;case"thickarrow":e=""!==y?` == ${y} ==> `:" ==> ";break;case"dotarrow":e=""!==y?` -. ${y} .-> `:" -.-> "}i.mermaid.push(p(u)+e+p(n[u.wires[f][w]],b&&b[f]||void 0))}}else if("switch"==u.type)for(f=0;f<u.wires.length;f++)for(w=0;w<u.wires[f].length;w++)n[u.wires[f][w]]&&i.mermaid.push(p(u)+" --\x3e "+p(n[u.wires[f][w]],(h=u.rules[f]).v&&h.t?d(h.t)+" "+h.v:h.v&&!h.t?h.v:d(h.t)));else{var v,b=u.outputLabels;u.type.startsWith("subflow:")&&(b=(v=o.nodes.subflow(u.type.replace(/subflow:/,"")))&&v.outputLabels||b);for(f=0;f<u.wires.length;f++)for(w=0;w<u.wires[f].length;w++)n[u.wires[f][w]]&&i.mermaid.push(p(u)+" --\x3e "+p(n[u.wires[f][w]],b&&b[f]||void 0))}}for(var A=Object.keys(a),j=new Set,L=e=>{0<e.nodesids.length&&(i.mermaid.push("subgraph "+c(e.name)),e.nodesids.forEach(e=>{"object"==typeof e?L(e):i.mermaid.push(e)}),i.mermaid.push("end"))},E=e=>"object"==typeof e||A.indexOf(e)<0,O=0;j.size<A.length&&O<2*A.length;)A.forEach(e=>{(!(a[e]&&0<a[e].nodesids.length)||(a[e].nodesids=a[e].nodesids.map(e=>{var r;return-1<A.indexOf(e)&&j.has(e)?(r={...a[e]},delete a[e],r):e}),a[e].nodesids.every(E)))&&j.add(e)}),O+=1;return Object.keys(a).forEach(e=>{0<a[e].nodesids.length&&L(a[e])}),i.mermaid.join("\n")}};