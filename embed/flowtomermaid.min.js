window.FlowToMermaid={constructMermaid:function(e,r="TB",l=void 0){for(var a={payload:e},e=a.payload.filter(e=>"tab"!=e.type&&"group"!=e.type),i={},t=0;t<e.length;t++){var n=e[t];i[n.id]=n}var s=l,o=(l||(s={nodes:{node:e=>i[e],subflow:e=>i[e]}}),e=>e&&{nnull:"not null",eq:"==",neq:"!=",lt:"<",lte:"<=",gt:">",gte:">=",hask:"has key",cont:"contains"}[e]||e),c=e=>e.replaceAll("&","&amp;").replaceAll("#","#35;").replaceAll("[","#91;").replaceAll("]","#93;").replaceAll("(","#40;").replaceAll(")","#41;").replaceAll("|","#124;").replaceAll(">","&gt;").replaceAll("<","&lt;").replaceAll("{","#123;").replaceAll("}","#125;").replaceAll("/","#47;").replaceAll('"',"#34;"),p=(e,r=void 0)=>{if(!e)return"";var l=e.name||e.type;switch(r=r?'|"'+c(r)+'"| ':"",l=c(l),e.type){case"switch":case"join":case"split":return r+e.id+'{"'+l+'"}';case"link call":case"link out":if(e.mode&&"return"==e.mode)return r+e.id+"[\\Link Return/]";if(!e.name||e.name.match(/^link out/)){if("dynamic"==e.linkType)return r+e.id+'{{"'+(l="\\Dynamic Target/")+'"}}';var a=e.links&&0<e.links.length&&(i[e.links[0]]||s.nodes.node(e.links[0])),l=c(a&&a.name||e.type)}return r+e.id+'{{"'+l+'"}}';case"link in":return l=c(e.name||e.links&&0<e.links.length&&i[e.links[0]]&&i[e.links[0]].name||e.type),r+e.id+'{{"'+l+'"}}';case"junction":return r+e.id+'(("conn"))';case"inject":case"debug":return r+e.id+'(["'+l+'"])';case"http in":return r+e.id+'["'+c("["+e.method+"] "+e.url)+'"]';case"mermaid-flowchart":return e.id+`@{ shape: "${e.shape}", label: "${l}" }`;default:return e.type.startsWith("subflow:")?(a=s.nodes.subflow(e.type.replace(/subflow:/,"")),l=c(a&&a.name||e.type),r+e.id+'[/"'+l+'"/]'):r+e.id+'["'+l+'"]'}};a.mermaid=["%% change this to LR Node-RED like UML","graph "+r];for(var d,t=0;t<e.length;t++){var u=e[t];if(u.links&&0<u.links.length&&"link out"==u.type)for(var h=0;h<u.links.length;h++)i[u.links[h]]&&a.mermaid.push(p(u)+" -.-> "+u.links[h]);if(u.wires&&0<u.wires.length)if("mermaid-flowchart"==u.type)for(var w=0;w<u.wires.length;w++)for(var m=0;m<u.wires[w].length;m++){var f=u.wires[w][m],k=(u.wirecfgs||[]).filter(e=>e.id==f)[0]||{};if(i[f]){let e=" --\x3e ";var g=c(k.name||"");switch(k.arrow||"arrow"){case"line":e=""!==g?` -- ${g} --- `:" --- ";break;case"arrow":e=""!==g?` -- ${g} --> `:" --\x3e ";break;case"thickarrow":e=""!==g?` == ${g} ==> `:" ==> ";break;case"dotarrow":e=""!==g?` -. ${g} .-> `:" -.-> "}a.mermaid.push(p(u)+e+p(i[u.wires[w][m]],y&&y[w]||void 0))}}else if("switch"==u.type)for(w=0;w<u.wires.length;w++)for(m=0;m<u.wires[w].length;m++)i[u.wires[w][m]]&&a.mermaid.push(p(u)+" --\x3e "+p(i[u.wires[w][m]],(d=u.rules[w]).v&&d.t?o(d.t)+" "+d.v:d.v&&!d.t?d.v:o(d.t)));else{var v,y=u.outputLabels;u.type.startsWith("subflow:")&&(y=(v=s.nodes.subflow(u.type.replace(/subflow:/,"")))&&v.outputLabels||y);for(w=0;w<u.wires.length;w++)for(m=0;m<u.wires[w].length;m++)i[u.wires[w][m]]&&a.mermaid.push(p(u)+" --\x3e "+p(i[u.wires[w][m]],y&&y[w]||void 0))}}return a.mermaid.join("\n")}};