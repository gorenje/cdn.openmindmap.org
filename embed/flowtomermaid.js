window.FlowToMermaid={constructMermaid:function(e,a="TB",r=void 0){for(var s={payload:e},l={},e=s.payload.filter(e=>("group"==e.type&&(l[e.id]={nodesids:[...e.nodes||[]],name:e.name||`**missing name ${e.id}**`,env:[...e.env||[]]}),"tab"!=e.type&&"group"!=e.type)),i={},n=0;n<e.length;n++){var t=e[n];i[t.id]=t}var o=r,c=(r||(o={nodes:{node:e=>i[e],subflow:e=>i[e]}}),e=>e&&{nnull:"not null",eq:"==",neq:"!=",lt:"<",lte:"<=",gt:">",gte:">=",hask:"has key",cont:"contains"}[e]||e),d=e=>e.replaceAll("&","&amp;").replaceAll("#","#35;").replaceAll("[","#91;").replaceAll("]","#93;").replaceAll("(","#40;").replaceAll(")","#41;").replaceAll("|","#124;").replaceAll(">","&gt;").replaceAll("<","&lt;").replaceAll("{","#123;").replaceAll("}","#125;").replaceAll("/","#47;").replaceAll('"',"#34;"),p=(e,a=void 0)=>{if(!e)return"";var r=e.name||e.type;switch(a=a?'|"'+d(a)+'"| ':"",r=d(r),e.type){case"switch":case"join":case"split":return a+e.id+'{"'+r+'"}';case"link call":case"link out":if(e.mode&&"return"==e.mode)return a+e.id+"[\\Link Return/]";if(!e.name||e.name.match(/^link out/)){if("dynamic"==e.linkType)return a+e.id+'{{"'+(r="\\Dynamic Target/")+'"}}';var s=e.links&&0<e.links.length&&(i[e.links[0]]||o.nodes.node(e.links[0])),r=d(s&&s.name||e.type)}return a+e.id+'{{"'+r+'"}}';case"link in":return r=d(e.name||e.links&&0<e.links.length&&i[e.links[0]]&&i[e.links[0]].name||e.type),a+e.id+'{{"'+r+'"}}';case"junction":return a+e.id+'(("conn"))';case"inject":case"debug":return a+e.id+'(["'+r+'"])';case"http in":return a+e.id+'["'+d("["+e.method+"] "+e.url)+'"]';case"mermaid-flowchart":return e.id+`@{ shape: "${e.shape}", label: "${r}" }`;default:return e.type.startsWith("subflow:")?(s=o.nodes.subflow(e.type.replace(/subflow:/,"")),r=d(s&&s.name||e.type),a+e.id+'[/"'+r+'"/]'):a+e.id+'["'+r+'"]'}};s.mermaid=["%% Generated by the Flow2UML Node @ https://flowhub.org/flow2uml","%% change direction to LR for Node-RED left-to-right UML","flowchart "+a];for(var h,n=0;n<e.length;n++){var u=e[n];if(u.links&&0<u.links.length&&"link out"==u.type)for(var m=0;m<u.links.length;m++)i[u.links[m]]&&s.mermaid.push(p(u)+" -.-> "+u.links[m]);if(u.wires&&0<u.wires.length)if("mermaid-flowchart"==u.type)for(var f=0;f<u.wires.length;f++)for(var k=0;k<u.wires[f].length;k++){var w=u.wires[f][k];(u.wirecfgs||[]).forEach(a=>{if(a.id==w&&i[w]){let e=" --\x3e ";var r=d(a.name||"");switch(a.arrow||"arrow"){case"--":case"line":e=""!==r?` -- "${r}" --- `:" --- ";break;case"--\x3e":case"arrow":e=""!==r?` -- "${r}" --> `:" --\x3e ";break;case"==>":case"thickarrow":e=""!==r?` == "${r}" ==> `:" ==> ";break;case"-.->":case"dotarrow":e=""!==r?` -. "${r}" .-> `:" -.-> ";break;case"-.-":e=""!==r?` -. "${r}" -.- `:" -.- ";break;case"==":e=""!==r?` == "${r}" === `:" === ";break;case"<--\x3e":e=""!==r?` <-- "${r}" --> `:" <---\x3e ";break;case"<-.->":e=""!==r?` <-. "${r}" .-> `:" <-.-> ";break;case"<==>":e=""!==r?` <== "${r}" ==> `:" <===> ";break;case"--x":e=""!==r?` -- "${r}" --x `:" --x ";break;case"-.-x":e=""!==r?` -. "${r}" .-x `:" -.-x ";break;case"==x":e=""!==r?` == "${r}" ==x `:" ===x ";break;case"x--x":e=""!==r?` x-- "${r}" --x `:" x--x ";break;case"x-.-x":e=""!==r?` x-. "${r}" .-x `:" x-.-x ";break;case"x==x":e=""!==r?` x== "${r}" ==x `:" x===x ";break;case"--o":e=""!==r?` -- "${r}" --o `:" --o ";break;case"-.-o":e=""!==r?` -. "${r}" .-o `:" -.-o ";break;case"==o":e=""!==r?` == "${r}" ==o `:" ===o ";break;case"o--o":e=""!==r?` o-- "${r}" --o `:" o--o ";break;case"o-.-o":e=""!==r?` o-. "${r}" .-o `:" o-.-o ";break;case"o==o":e=""!==r?` o== "${r}" ==o `:" o===o "}s.mermaid.push(p(u)+e+p(i[u.wires[f][k]],g&&g[f]||void 0))}})}else if("switch"==u.type)for(f=0;f<u.wires.length;f++)for(k=0;k<u.wires[f].length;k++)i[u.wires[f][k]]&&s.mermaid.push(p(u)+" --\x3e "+p(i[u.wires[f][k]],(h=u.rules[f]).v&&h.t?c(h.t)+" "+h.v:h.v&&!h.t?h.v:c(h.t)));else{var b,g=u.outputLabels;u.type.startsWith("subflow:")&&(b=o.nodes.subflow(u.type.replace(/subflow:/,"")),g=b&&b.outputLabels||g);for(f=0;f<u.wires.length;f++)for(k=0;k<u.wires[f].length;k++)i[u.wires[f][k]]&&s.mermaid.push(p(u)+" --\x3e "+p(i[u.wires[f][k]],g&&g[f]||void 0))}}for(var v=Object.keys(l),x=new Set,y=e=>{var a;0<e.nodesids.length&&(s.mermaid.push(`subgraph "${d(e.name)}"`),(a=(e.env.filter(e=>"MERMAID_DIRECTION"==e.name)[0]||{value:void 0}).value)&&s.mermaid.push("direction "+a),e.nodesids.forEach(e=>{"object"==typeof e?y(e):s.mermaid.push(e)}),s.mermaid.push("end"))},A=e=>"object"==typeof e||v.indexOf(e)<0,j=0;x.size<v.length&&j<2*v.length;)v.forEach(e=>{(!(l[e]&&0<l[e].nodesids.length)||(l[e].nodesids=l[e].nodesids.map(e=>{var a;return-1<v.indexOf(e)&&x.has(e)?(a={...l[e]},delete l[e],a):e}),l[e].nodesids.every(A)))&&x.add(e)}),j+=1;return Object.keys(l).forEach(e=>{0<l[e].nodesids.length&&y(l[e])}),s.mermaid.join("\n")}};